service types
===============

NodePort - makes a pod from node available with the help of a port 
ClusterIP - Virtual IP inside the cluster
LoadBalancer -


spec:
  type: NodePort
  ports:
     - targetPort:
       port:
       nodePort:
  selector:
        tier: frontend
       
kubectl get svc

spec:
   type: ClusterIP // default service-type
   ports:
      - targetPort: 
        port:
   
   selector:
         app: selector
         
Ingress - helps you to access your service using a single URL . (SSL+Routing)

Ingress is configured as - Ingress Controller (Nginx,HAProxy) + Ingress Resources (Configuration)

Ingress Controller =>. Deployment + Service + ConfigMap + Auth


Ingress Configuration #1 
==========================

apiVersion:

kind:

metadata:
      name:
      
spec:
  backend:
      serverName: wear-service
      serverPort: 80
      
Ingress Configuration #2
================================


apiVersion:

kind:

metadata:
      name:

spec:
   rules:
     - http:
         paths:
          - path: /wear
            backend:
                 serviceName:
                 servicePort:
          - path: /watch
            backend:
                 serviceName:
                 servicePort:
                 
 Ingress Configuration #3
 ==================================
 
 apiVersion:
 
 kind:
 
 metadata:
       name:
       
 spec:
    rules:
      - host:
        paths:
         - backend:
                serviceName:
                servicePort:
                
                
Network Policy
=================

apiVersion: networking.k8s.io/v1

kind: NetworkPolicy

metadata:
      name: db-policy

spec:
  podSelector:
        matchLabels:
                role: db
  policyTypes
    - Ingress
    ingress:
    - from:
      - podSelector:
            matchLabels:
                   name: api-level
      ports:
        - protocol: TCP
          port: 3306
